   1              		.arch armv6
   2              		.eabi_attribute 27, 3
   3              		.eabi_attribute 28, 1
   4              		.fpu vfp
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 2
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	add_two
  21              	add_two:
  22              	.LFB0:
  23              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * main.c
   3:main.c        ****  *
   4:main.c        ****  *  Created on: 07.03.2013
   5:main.c        ****  *      Author: igor
   6:main.c        ****  */
   7:main.c        **** 
   8:main.c        **** #include <stdio.h>
   9:main.c        **** #include <stdlib.h>
  10:main.c        **** 
  11:main.c        **** int
  12:main.c        **** add_two(int a, int b)
  13:main.c        **** {
  24              		.loc 1 13 0
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 8
  27              		@ frame_needed = 1, uses_anonymous_args = 0
  28              		@ link register save eliminated.
  29 0000 04B02DE5 		str	fp, [sp, #-4]!
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 4
  32              		.cfi_offset 11, -4
  33 0004 00B08DE2 		add	fp, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 11
  36 0008 0CD04DE2 		sub	sp, sp, #12
  37 000c 08000BE5 		str	r0, [fp, #-8]
  38 0010 0C100BE5 		str	r1, [fp, #-12]
  14:main.c        ****     return a+ b;
  39              		.loc 1 14 0
  40 0014 08201BE5 		ldr	r2, [fp, #-8]
  41 0018 0C301BE5 		ldr	r3, [fp, #-12]
  42 001c 033082E0 		add	r3, r2, r3
  15:main.c        **** }
  43              		.loc 1 15 0
  44 0020 0300A0E1 		mov	r0, r3
  45 0024 00D08BE2 		add	sp, fp, #0
  46 0028 0008BDE8 		ldmfd	sp!, {fp}
  47 002c 1EFF2FE1 		bx	lr
  48              		.cfi_endproc
  49              	.LFE0:
  51              		.align	2
  52              		.global	add_three
  54              	add_three:
  55              	.LFB1:
  16:main.c        **** 
  17:main.c        **** int
  18:main.c        **** add_three(int a, int b, int c)
  19:main.c        **** {
  56              		.loc 1 19 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 24
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60 0030 00482DE9 		stmfd	sp!, {fp, lr}
  61              	.LCFI2:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 11, -8
  64              		.cfi_offset 14, -4
  65 0034 04B08DE2 		add	fp, sp, #4
  66              	.LCFI3:
  67              		.cfi_def_cfa 11, 4
  68 0038 18D04DE2 		sub	sp, sp, #24
  69 003c 10000BE5 		str	r0, [fp, #-16]
  70 0040 14100BE5 		str	r1, [fp, #-20]
  71 0044 18200BE5 		str	r2, [fp, #-24]
  20:main.c        ****     int tmp = add_two(a, b);
  72              		.loc 1 20 0
  73 0048 10001BE5 		ldr	r0, [fp, #-16]
  74 004c 14101BE5 		ldr	r1, [fp, #-20]
  75 0050 FEFFFFEB 		bl	add_two
  76 0054 08000BE5 		str	r0, [fp, #-8]
  21:main.c        ****     return add_two(tmp, c);
  77              		.loc 1 21 0
  78 0058 08001BE5 		ldr	r0, [fp, #-8]
  79 005c 18101BE5 		ldr	r1, [fp, #-24]
  80 0060 FEFFFFEB 		bl	add_two
  81 0064 0030A0E1 		mov	r3, r0
  22:main.c        **** }
  82              		.loc 1 22 0
  83 0068 0300A0E1 		mov	r0, r3
  84 006c 04D04BE2 		sub	sp, fp, #4
  85 0070 0088BDE8 		ldmfd	sp!, {fp, pc}
  86              		.cfi_endproc
  87              	.LFE1:
  89              		.section	.rodata
  90              		.align	2
  91              	.LC0:
  92 0000 4E756D62 		.ascii	"Number %d\012\000"
  92      65722025 
  92      640A00
  93 000b 00       		.text
  94              		.align	2
  95              		.global	main
  97              	main:
  98              	.LFB2:
  23:main.c        **** 
  24:main.c        **** int
  25:main.c        **** main(int argc, char *argv[])
  26:main.c        **** {
  99              		.loc 1 26 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 8
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0074 00482DE9 		stmfd	sp!, {fp, lr}
 104              	.LCFI4:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 11, -8
 107              		.cfi_offset 14, -4
 108 0078 04B08DE2 		add	fp, sp, #4
 109              	.LCFI5:
 110              		.cfi_def_cfa 11, 4
 111 007c 08D04DE2 		sub	sp, sp, #8
 112 0080 08000BE5 		str	r0, [fp, #-8]
 113 0084 0C100BE5 		str	r1, [fp, #-12]
  27:main.c        ****     printf("Number %d\n", add_three(7, 6, 5));
 114              		.loc 1 27 0
 115 0088 0700A0E3 		mov	r0, #7
 116 008c 0610A0E3 		mov	r1, #6
 117 0090 0520A0E3 		mov	r2, #5
 118 0094 FEFFFFEB 		bl	add_three
 119 0098 0030A0E1 		mov	r3, r0
 120 009c 14009FE5 		ldr	r0, .L7
 121 00a0 0310A0E1 		mov	r1, r3
 122 00a4 FEFFFFEB 		bl	printf
  28:main.c        **** 	return EXIT_SUCCESS;
 123              		.loc 1 28 0
 124 00a8 0030A0E3 		mov	r3, #0
  29:main.c        **** }
 125              		.loc 1 29 0
 126 00ac 0300A0E1 		mov	r0, r3
 127 00b0 04D04BE2 		sub	sp, fp, #4
 128 00b4 0088BDE8 		ldmfd	sp!, {fp, pc}
 129              	.L8:
 130              		.align	2
 131              	.L7:
 132 00b8 00000000 		.word	.LC0
 133              		.cfi_endproc
 134              	.LFE2:
 136              	.Letext0:
